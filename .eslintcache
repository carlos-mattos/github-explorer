[{"C:\\xampp\\htdocs\\_CursoJS\\GoStack\\github-project\\src\\styles\\global.ts":"1","C:\\xampp\\htdocs\\_CursoJS\\GoStack\\github-project\\src\\index.tsx":"2","C:\\xampp\\htdocs\\_CursoJS\\GoStack\\github-project\\src\\pages\\Dashboard\\index.tsx":"3","C:\\xampp\\htdocs\\_CursoJS\\GoStack\\github-project\\src\\pages\\Repository\\index.tsx":"4","C:\\xampp\\htdocs\\_CursoJS\\GoStack\\github-project\\src\\services\\api.ts":"5"},{"size":545,"mtime":1608841496246,"results":"6","hashOfConfig":"7"},{"size":197,"mtime":1608748298595,"results":"8","hashOfConfig":"7"},{"size":2628,"mtime":1609360031891,"results":"9","hashOfConfig":"7"},{"size":2536,"mtime":1609008402295,"results":"10","hashOfConfig":"7"},{"size":124,"mtime":1608845828942,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jt5552",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\_CursoJS\\GoStack\\github-project\\src\\styles\\global.ts",[],"C:\\xampp\\htdocs\\_CursoJS\\GoStack\\github-project\\src\\index.tsx",[],["24","25"],"C:\\xampp\\htdocs\\_CursoJS\\GoStack\\github-project\\src\\pages\\Dashboard\\index.tsx",["26"],"C:\\xampp\\htdocs\\_CursoJS\\GoStack\\github-project\\src\\pages\\Repository\\index.tsx",["27"],"import React, { useEffect, useState } from 'react';\r\nimport { useRouteMatch, Link } from 'react-router-dom';\r\nimport { Header, RepositoryInfo, Issues } from './styles';\r\nimport logoImg from '../../assets/logo.svg';\r\nimport { FiChevronsLeft, FiChevronRight } from 'react-icons/fi';\r\nimport api from '../../services/api';\r\n\r\ninterface RepositoryParams {\r\n  repository: string;\r\n}\r\n\r\ninterface Repository {\r\n  full_name: string;\r\n  description: string;\r\n  owner: {\r\n    login: string;\r\n    avatar_url: string;\r\n  };\r\n  stargazers_count: number;\r\n  forks_count: number;\r\n  open_issues_count: number;\r\n}\r\n\r\ninterface Issue {\r\n  title: string;\r\n  id: number;\r\n  user: {\r\n    login: string;\r\n  };\r\n  html_url: string;\r\n}\r\n\r\nconst Repository: React.FC = () => {\r\n  const { params } = useRouteMatch<RepositoryParams>();\r\n  const [repository, setRepository] = useState<Repository | null>(null);\r\n  const [issues, setIssues] = useState<Issue[]>([]);\r\n\r\n  useEffect(() => {\r\n    api.get(`repos/${params.repository}`).then((response) => {\r\n      setRepository(response.data);\r\n    });\r\n    api.get(`repos/${params.repository}/issues`).then((response) => {\r\n      setIssues(response.data);\r\n    });\r\n  }, [params.repository]);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <img src={logoImg} alt=\"Github Explorer\" />\r\n        <Link to=\"/\">\r\n          <FiChevronsLeft size={16} />\r\n          back\r\n        </Link>\r\n      </Header>\r\n      <RepositoryInfo>\r\n        <header>\r\n          <img\r\n            src={repository?.owner.avatar_url}\r\n            alt={repository?.owner.login}\r\n          />\r\n          <div>\r\n            <strong>{repository?.full_name}</strong>\r\n            <p>{repository?.description}</p>\r\n          </div>\r\n        </header>\r\n        <ul>\r\n          <li>\r\n            <strong>{repository?.stargazers_count}</strong>\r\n            <span>Stars</span>\r\n          </li>\r\n          <li>\r\n            <strong>{repository?.forks_count}</strong>\r\n            <span>Forks</span>\r\n          </li>\r\n          <li>\r\n            <strong>{repository?.open_issues_count}</strong>\r\n            <span>Open issues</span>\r\n          </li>\r\n        </ul>\r\n      </RepositoryInfo>\r\n\r\n      <Issues>\r\n        {issues.map((issue) => (\r\n          <a key={issue.id} href={issue.html_url}>\r\n            <div>\r\n              <strong>{issue.title}</strong>\r\n              <p>{issue.user.login}</p>\r\n            </div>\r\n            <FiChevronRight size={20} />\r\n          </a>\r\n        ))}\r\n      </Issues>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Repository;\r\n","C:\\xampp\\htdocs\\_CursoJS\\GoStack\\github-project\\src\\services\\api.ts",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":8,"column":11,"nodeType":"34","messageId":"35","endLine":8,"endColumn":21},{"ruleId":"32","severity":1,"message":"33","line":33,"column":7,"nodeType":"34","messageId":"35","endLine":33,"endColumn":27},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"@typescript-eslint/no-redeclare","'Repository' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]